version: "3.0"
services:
  node1:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node1:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node2:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node2:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node3:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node3:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node4:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node4:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node5:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node5:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node6:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node6:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node7:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node7:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node8:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node8:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node9:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node9:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
  node10:
    image: ohie
    command: [ "./Node", "8080", "_peers_docker", "node10:8080" ]
    deploy:
      restart_policy:
        condition: none
      replicas: 1
